{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/flex-layout/extended\";\n\nfunction ChatComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵelementStart(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const mObj_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", mObj_r1.username === ctx_r0.msgDto.username ? \"recieved-msg\" : \"sent-msg\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", mObj_r1.username, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", mObj_r1.message, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 4, mObj_r1.dateTime, \"medium\"));\n  }\n}\n\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService, authService) {\n      this.chatService = chatService;\n      this.authService = authService;\n      this.msgDto = {};\n      this.msgInboxArray = [];\n      this.msgDto.username = authService.sharedUserDetails$.userName;\n    }\n\n    ngOnInit() {\n      this.chatService.retrieveMappedObject().subscribe(receivedObj => {\n        this.addToInbox(receivedObj);\n      });\n    }\n\n    send() {\n      if (this.msgDto.message) {\n        let dateTime = new Date();\n        this.msgDto.dateTime = dateTime;\n        this.chatService.broadcastMessage(this.msgDto);\n        this.msgDto.message = \"\";\n      }\n    }\n\n    addToInbox(obj) {\n      let newObj = {};\n      newObj.username = obj.username;\n      newObj.message = obj.message;\n      newObj.dateTime = obj.dateTime;\n      this.msgInboxArray.unshift(newObj);\n    }\n\n  }\n\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    inputs: {\n      msgInboxArray: \"msgInboxArray\"\n    },\n    decls: 12,\n    vars: 2,\n    consts: [[1, \"chat-container\"], [1, \"chat-msg-history\"], [4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 1, \"chat-form-field\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"matSuffix\", \"\", 3, \"click\"], [3, \"ngClass\"], [1, \"chat-date\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\");\n        i0.ɵɵtext(2, \"Global Chat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, ChatComponent_div_4_Template, 10, 7, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Mesaj\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.msgDto.message = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_9_listener() {\n          return ctx.send();\n        });\n        i0.ɵɵelementStart(10, \"mat-icon\");\n        i0.ɵɵtext(11, \"send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.msgInboxArray);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.msgDto.message);\n      }\n    },\n    directives: [i3.NgForOf, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i7.MatButton, i4.MatSuffix, i8.MatIcon, i3.NgClass, i9.DefaultClassDirective],\n    pipes: [i3.DatePipe],\n    styles: [\".chat-container[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #3f51b5;border-radius:10px;display:flex;flex-direction:column;position:fixed;bottom:70px;right:40px}h2[_ngcontent-%COMP%]{color:orange;align-self:center}.chat-msg-history[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{margin-left:5px;margin-right:5px}.chat-msg-history[_ngcontent-%COMP%]{height:350px;background-color:#f3f0f0;border:1px solid #dcdddd;border-radius:7px;overflow:auto;scrollbar-width:thin;height:xyz}.chat-form-field[_ngcontent-%COMP%]{margin-left:5px;margin-right:5px}.recieved-msg[_ngcontent-%COMP%]{background-color:#fdc968;margin-left:20px}.recieved-msg[_ngcontent-%COMP%], .sent-msg[_ngcontent-%COMP%]{width:180px;padding:5px;margin-top:20px;border-radius:10px;word-wrap:break-word}.sent-msg[_ngcontent-%COMP%]{background-color:#91bef1;margin-left:5px}.chat-date[_ngcontent-%COMP%]{font-size:xx-small;color:#616060;font-style:italic;float:right;margin-right:5px}\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}