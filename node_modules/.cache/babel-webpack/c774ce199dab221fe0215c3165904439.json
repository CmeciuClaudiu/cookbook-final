{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/button\";\n\nfunction DialogComponent_div_2_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"*minim 6 caractere\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DialogComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"Din motive de securitate va rugam sa reintroduceti parola\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-form-field\", 5);\n    i0.ɵɵelementStart(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Parola\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 6);\n    i0.ɵɵtemplate(7, DialogComponent_div_2_mat_error_7_Template, 2, 0, \"mat-error\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.length.invalid);\n  }\n}\n\nfunction DialogComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelementStart(1, \"button\", 9);\n    i0.ɵɵtext(2, \"Ok\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"mat-dialog-close\", ctx_r1.data.password)(\"disabled\", ctx_r1.length.invalid);\n  }\n}\n\nfunction DialogComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"Sunteti sigur ca doriti sa continuati operatiunea?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 11);\n    i0.ɵɵtext(4, \"Anulare\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 11);\n    i0.ɵɵtext(6, \"Ok\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"mat-dialog-close\", false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"mat-dialog-close\", true);\n  }\n}\n\nexport let DialogComponent = /*#__PURE__*/(() => {\n  class DialogComponent {\n    constructor(dialogRef, data) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.length = new FormControl('', [Validators.minLength(6)]);\n      this.destroy$ = new Subject();\n    }\n\n    onNoClick() {\n      this.dialogRef.close();\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.unsubscribe();\n    }\n\n    ngDoCheck() {\n      this.length.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(model => this.data.password = model);\n    }\n\n  }\n\n  DialogComponent.ɵfac = function DialogComponent_Factory(t) {\n    return new (t || DialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  DialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogComponent,\n    selectors: [[\"app-dialog\"]],\n    decls: 5,\n    vars: 4,\n    consts: [[\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\", \"class\", \"dialog-content\", 4, \"ngIf\"], [\"mat-dialog-actions\", \"\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\", \"class\", \"confirmation-dialog-content\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\", 1, \"dialog-content\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"password\", 3, \"formControl\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"cdkFocusInitial\", \"\", 3, \"mat-dialog-close\", \"disabled\"], [\"mat-dialog-content\", \"\", 1, \"confirmation-dialog-content\"], [\"mat-button\", \"\", 3, \"mat-dialog-close\"]],\n    template: function DialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, DialogComponent_div_2_Template, 8, 2, \"div\", 1);\n        i0.ɵɵtemplate(3, DialogComponent_div_3_Template, 3, 2, \"div\", 2);\n        i0.ɵɵtemplate(4, DialogComponent_div_4_Template, 7, 2, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"Salut \", ctx.data.userName, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.confirm == null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.confirm == null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.data.confirm != null);\n      }\n    },\n    directives: [i1.MatDialogTitle, i2.NgIf, i1.MatDialogContent, i3.MatFormField, i3.MatLabel, i4.MatInput, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlDirective, i3.MatError, i1.MatDialogActions, i6.MatButton, i1.MatDialogClose],\n    styles: [\"h1[_ngcontent-%COMP%]{text-align:center;color:orange}.dialog-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center}.mat-button[_ngcontent-%COMP%]{background-color:#eff5f5;margin-left:10px}\"]\n  });\n  return DialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}