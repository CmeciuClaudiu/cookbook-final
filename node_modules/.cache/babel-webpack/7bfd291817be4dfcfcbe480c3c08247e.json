{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/shared/snackbar/snackbar.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/stepper\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@ngx-formly/core\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/common\";\n\nfunction RegisterComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Ultimul pas\");\n  }\n}\n\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(breakpointObserver, userService, snackBar, router) {\n      this.userService = userService;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.form = new FormGroup({});\n      this.passwordForm = new FormGroup({});\n      this.model = {};\n      this.pwdObject = {};\n      this.destroy$ = new Subject();\n      this.invalidUsername = \"This username already exists!\";\n      this.fields = [{\n        key: 'userName',\n        type: 'input',\n        templateOptions: {\n          label: 'Nume utilizator',\n          placeholder: 'Introduceti numele utilizator: ',\n          required: true,\n          maxLength: 50\n        }\n      }, {\n        key: 'email',\n        type: 'input',\n        templateOptions: {\n          label: 'Adresa de email',\n          placeholder: 'Introduceti adresa de email: ',\n          pattern: \"^[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\",\n          required: true,\n          maxLength: 50\n        },\n        validation: {\n          messages: {\n            pattern: (error, field) => `Adresa de email invalida`\n          }\n        }\n      }];\n      this.passwordFields = [{\n        validators: {\n          validation: [{\n            name: 'fieldMatch',\n            options: {\n              errorPath: 'passwordChck'\n            }\n          }]\n        },\n        fieldGroup: [{\n          key: 'password',\n          type: 'input',\n          templateOptions: {\n            label: 'Va rugam alegeti o parola',\n            placeholder: 'Introduceti parola: ',\n            type: 'password',\n            required: true,\n            minLength: 6\n          }\n        }, {\n          key: 'passwordChck',\n          type: 'input',\n          templateOptions: {\n            label: 'Reintroduceti parola',\n            placeholder: 'Introduceti parola: ',\n            type: 'password',\n            required: true,\n            minLength: 6\n          }\n        }]\n      }];\n      this.stepperOrientation = breakpointObserver.observe('(min-width: 800px)').pipe(map(({\n        matches\n      }) => matches ? 'horizontal' : 'vertical'));\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.unsubscribe();\n    }\n\n    onSubmit() {\n      this.model.userRole = 2;\n      this.model.password = this.pwdObject.password;\n      this.userService.userPost(this.model).pipe(takeUntil(this.destroy$)).subscribe(res => {\n        this.snackBar.openSimpleMessageSnackbar(res.userName);\n\n        if (res.userName !== this.invalidUsername) {\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          }, 5000);\n        }\n      });\n    }\n\n  }\n\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarComponent), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 39,\n    vars: 16,\n    consts: [[1, \"register-container\"], [1, \"stepper\", 3, \"orientation\", \"linear\"], [\"label\", \"Introduceti numele si email-ul\", 3, \"stepControl\", \"completed\"], [3, \"formGroup\"], [3, \"form\", \"fields\", \"model\"], [\"mat-button\", \"\", \"matStepperNext\", \"\"], [\"label\", \"Introduceti parola\", 3, \"stepControl\", \"completed\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\"], [\"matStepLabel\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\", 1, \"register-button\", 3, \"click\"], [1, \"valid-message-label\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\");\n        i0.ɵɵelementStart(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"restaurant\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \"Inregistrare\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n        i0.ɵɵtext(7, \"Va rugam sa completati formularul de inregistrare\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-card-content\");\n        i0.ɵɵelementStart(9, \"mat-stepper\", 1);\n        i0.ɵɵpipe(10, \"async\");\n        i0.ɵɵelementStart(11, \"mat-step\", 2);\n        i0.ɵɵelementStart(12, \"form\", 3);\n        i0.ɵɵelement(13, \"formly-form\", 4);\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵelementStart(15, \"button\", 5);\n        i0.ɵɵtext(16, \"Next\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-step\", 6);\n        i0.ɵɵelementStart(18, \"form\", 3);\n        i0.ɵɵelement(19, \"formly-form\", 4);\n        i0.ɵɵelementStart(20, \"div\");\n        i0.ɵɵelementStart(21, \"button\", 7);\n        i0.ɵɵtext(22, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 5);\n        i0.ɵɵtext(24, \"Next\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-step\");\n        i0.ɵɵtemplate(26, RegisterComponent_ng_template_26_Template, 1, 0, \"ng-template\", 8);\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"h1\");\n        i0.ɵɵtext(29, \"Echipa cookbook va multumeste!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_31_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(32, \" Inregistrare \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"label\", 10);\n        i0.ɵɵtext(35, \"*Apasati aici pentru inregistrare\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\");\n        i0.ɵɵelementStart(37, \"button\", 7);\n        i0.ɵɵtext(38, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"orientation\", i0.ɵɵpipeBind1(10, 14, ctx.stepperOrientation))(\"linear\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stepControl\", ctx.form)(\"completed\", ctx.form.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"stepControl\", ctx.passwordForm)(\"completed\", ctx.passwordForm.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.passwordForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"form\", ctx.passwordForm)(\"fields\", ctx.passwordFields)(\"model\", ctx.pwdObject);\n      }\n    },\n    directives: [i5.MatCard, i6.MatIcon, i5.MatCardTitle, i5.MatCardSubtitle, i5.MatCardContent, i7.MatStepper, i7.MatStep, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i9.FormlyForm, i10.MatButton, i7.MatStepperNext, i7.MatStepperPrevious, i7.MatStepLabel],\n    pipes: [i11.AsyncPipe],\n    styles: [\".register-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}mat-card[_ngcontent-%COMP%]{margin-top:60px;display:flex;flex-direction:column;justify-content:space-between;width:800px;height:auto;margin-bottom:100px}mat-card-title[_ngcontent-%COMP%]{align-self:center;flex:1;margin-bottom:26px;font-size:35px}.register-button[_ngcontent-%COMP%]{display:flex;float:left;background-color:teal;color:#fff}.stepper[_ngcontent-%COMP%]{margin-top:8px}.mat-form-field[_ngcontent-%COMP%]{margin-top:16px}h1[_ngcontent-%COMP%]{text-align:center;font-size:28px;font-weight:700}.valid-message-label[_ngcontent-%COMP%]{font-size:12px;margin-left:12px}\"]\n  });\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}