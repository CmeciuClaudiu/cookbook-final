{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/shared/snackbar/snackbar.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/stepper\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@ngx-formly/core\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/common\";\n\nfunction RegisterComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Ultimul pas\");\n  }\n}\n\nfunction RegisterComponent_label_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 12);\n    i0.ɵɵtext(1, \"*Datele nu sunt completate corect. Va rugam sa verificati.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterComponent_label_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 13);\n    i0.ɵɵtext(1, \"*Apasati aici pentru inregistrare\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RegisterComponent {\n  constructor(breakpointObserver, _userService, snackBar, router) {\n    this.breakpointObserver = breakpointObserver;\n    this._userService = _userService;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.form = new FormGroup({});\n    this.passwordForm = new FormGroup({});\n    this.model = {};\n    this.pwdObject = {};\n    this.destroy$ = new Subject();\n    this.invalidUsername = \"This username already exists!\";\n    this.fields = [{\n      key: 'userName',\n      type: 'input',\n      templateOptions: {\n        label: 'Nume utilizator',\n        placeholder: 'Introduceti numele utilizator: ',\n        required: true,\n        maxLength: 50\n      }\n    }, {\n      key: 'email',\n      type: 'input',\n      templateOptions: {\n        label: 'Adresa de email',\n        placeholder: 'Introduceti adresa de email: ',\n        pattern: \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\",\n        required: true,\n        maxLength: 50\n      },\n      validation: {\n        messages: {\n          pattern: (error, field) => `Adresa de email invalida`\n        }\n      }\n    }];\n    this.passwordFields = [{\n      validators: {\n        validation: [{\n          name: 'fieldMatch',\n          options: {\n            errorPath: 'passwordChck'\n          }\n        }]\n      },\n      fieldGroup: [{\n        key: 'password',\n        type: 'input',\n        templateOptions: {\n          label: 'Va rugam alegeti o parola',\n          placeholder: 'Introduceti parola: ',\n          type: 'password',\n          required: true,\n          minLength: 6\n        }\n      }, {\n        key: 'passwordChck',\n        type: 'input',\n        templateOptions: {\n          label: 'Reintroduceti parola',\n          placeholder: 'Introduceti parola: ',\n          type: 'password',\n          required: true,\n          minLength: 6\n        }\n      }]\n    }];\n    this.userService = _userService;\n    this.stepperOrientation = breakpointObserver.observe('(min-width: 800px)').pipe(map(({\n      matches\n    }) => matches ? 'horizontal' : 'vertical'));\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  onSubmit() {\n    this.model.userRole = 2;\n    this.model.password = this.pwdObject.password;\n    this.userService.userPost(this.model).pipe(takeUntil(this.destroy$)).subscribe(res => {\n      this.snackBar.openUserRegistrationSnackBar(res.userName);\n\n      if (res.userName !== this.invalidUsername) {\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 5000);\n      }\n    });\n  }\n\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarComponent), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 39,\n  vars: 16,\n  consts: [[1, \"register-container\"], [1, \"stepper\", 3, \"orientation\"], [\"label\", \"Introduceti numele si email-ul\", 3, \"stepControl\"], [3, \"formGroup\"], [3, \"form\", \"fields\", \"model\"], [\"mat-button\", \"\", \"matStepperNext\", \"\"], [\"label\", \"Introduceti parola\", 3, \"stepControl\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\"], [\"matStepLabel\", \"\"], [\"mat-button\", \"\", \"type\", \"submit\", 1, \"register-button\", 3, \"disabled\", \"click\"], [\"class\", \"error-message-label\", 4, \"ngIf\"], [\"class\", \"valid-message-label\", 4, \"ngIf\"], [1, \"error-message-label\"], [1, \"valid-message-label\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"mat-card\");\n      i0.ɵɵelementStart(2, \"mat-icon\");\n      i0.ɵɵtext(3, \"restaurant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-card-title\");\n      i0.ɵɵtext(5, \"Inregistrare\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n      i0.ɵɵtext(7, \"Va rugam sa completati formularul de inregistrare\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-card-content\");\n      i0.ɵɵelementStart(9, \"mat-stepper\", 1);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementStart(11, \"mat-step\", 2);\n      i0.ɵɵelementStart(12, \"form\", 3);\n      i0.ɵɵelement(13, \"formly-form\", 4);\n      i0.ɵɵelementStart(14, \"div\");\n      i0.ɵɵelementStart(15, \"button\", 5);\n      i0.ɵɵtext(16, \"Next\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-step\", 6);\n      i0.ɵɵelementStart(18, \"form\", 3);\n      i0.ɵɵelement(19, \"formly-form\", 4);\n      i0.ɵɵelementStart(20, \"div\");\n      i0.ɵɵelementStart(21, \"button\", 7);\n      i0.ɵɵtext(22, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 5);\n      i0.ɵɵtext(24, \"Next\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"mat-step\");\n      i0.ɵɵtemplate(26, RegisterComponent_ng_template_26_Template, 1, 0, \"ng-template\", 8);\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelementStart(28, \"h1\");\n      i0.ɵɵtext(29, \"Echipa cookbook va multumeste!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵelementStart(31, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_31_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(32, \" Inregistrare \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵtemplate(34, RegisterComponent_label_34_Template, 2, 0, \"label\", 10);\n      i0.ɵɵtemplate(35, RegisterComponent_label_35_Template, 2, 0, \"label\", 11);\n      i0.ɵɵelementStart(36, \"div\");\n      i0.ɵɵelementStart(37, \"button\", 7);\n      i0.ɵɵtext(38, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"orientation\", i0.ɵɵpipeBind1(10, 14, ctx.stepperOrientation));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"stepControl\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.fields)(\"model\", ctx.model);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"stepControl\", ctx.passwordForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.passwordForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"form\", ctx.passwordForm)(\"fields\", ctx.passwordFields)(\"model\", ctx.pwdObject);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.passwordForm.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.invalid || ctx.passwordForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.valid && ctx.passwordForm.valid);\n    }\n  },\n  directives: [i5.MatCard, i6.MatIcon, i5.MatCardTitle, i5.MatCardSubtitle, i5.MatCardContent, i7.MatStepper, i7.MatStep, i8.ɵNgNoValidate, i8.NgControlStatusGroup, i8.FormGroupDirective, i9.FormlyForm, i10.MatButton, i7.MatStepperNext, i7.MatStepperPrevious, i7.MatStepLabel, i11.NgIf],\n  pipes: [i11.AsyncPipe],\n  styles: [\".register-container[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\nmat-card[_ngcontent-%COMP%]{\\r\\n    margin-top:60px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content:space-between;\\r\\n    width:800px;\\r\\n    height: auto;\\r\\n    margin-bottom: 100px;\\r\\n}\\r\\n\\r\\nmat-card-title[_ngcontent-%COMP%]{\\r\\n    align-self: center;\\r\\n    flex: 1;\\r\\n    margin-bottom:26px;\\r\\n    font-size: 35px;\\r\\n}\\r\\n\\r\\n.register-button[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n    float: left;\\r\\n    background-color:teal;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.stepper[_ngcontent-%COMP%] {\\r\\n    margin-top: 8px;\\r\\n  }\\r\\n\\r\\n.mat-form-field[_ngcontent-%COMP%] {\\r\\n    margin-top: 16px;\\r\\n  }\\r\\n\\r\\nh1[_ngcontent-%COMP%]{\\r\\n      text-align: center;\\r\\n      font-size: 28px;\\r\\n      font-weight:bold;\\r\\n  }\\r\\n\\r\\n.error-message-label[_ngcontent-%COMP%]{\\r\\n      color: red;\\r\\n      font-size: 12px;\\r\\n      margin-left:12px;\\r\\n  }\\r\\n\\r\\n.valid-message-label[_ngcontent-%COMP%]{\\r\\n    font-size: 12px;\\r\\n    margin-left:12px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLDZCQUE2QjtJQUM3QixXQUFXO0lBQ1gsWUFBWTtJQUNaLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixPQUFPO0lBQ1Asa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsV0FBVztJQUNYLHFCQUFxQjtJQUNyQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZUFBZTtFQUNqQjs7QUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7QUFFQTtNQUNJLGtCQUFrQjtNQUNsQixlQUFlO01BQ2YsZ0JBQWdCO0VBQ3BCOztBQUVBO01BQ0ksVUFBVTtNQUNWLGVBQWU7TUFDZixnQkFBZ0I7RUFDcEI7O0FBRUE7SUFDRSxlQUFlO0lBQ2YsZ0JBQWdCO0VBQ2xCIiwiZmlsZSI6InJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxubWF0LWNhcmR7XHJcbiAgICBtYXJnaW4tdG9wOjYwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO1xyXG4gICAgd2lkdGg6ODAwcHg7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMDBweDtcclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGV7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBmbGV4OiAxO1xyXG4gICAgbWFyZ2luLWJvdHRvbToyNnB4O1xyXG4gICAgZm9udC1zaXplOiAzNXB4O1xyXG59XHJcblxyXG4ucmVnaXN0ZXItYnV0dG9ue1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjp0ZWFsO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uc3RlcHBlciB7XHJcbiAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gIH1cclxuXHJcbiAgaDF7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICBmb250LXdlaWdodDpib2xkO1xyXG4gIH1cclxuXHJcbiAgLmVycm9yLW1lc3NhZ2UtbGFiZWx7XHJcbiAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgbWFyZ2luLWxlZnQ6MTJweDtcclxuICB9XHJcblxyXG4gIC52YWxpZC1tZXNzYWdlLWxhYmVse1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6MTJweDtcclxuICB9Il19 */\"]\n});","map":{"version":3,"sources":["E:\\Proiecte\\CookBook\\FrontEnd\\cookbook\\src\\app\\core\\register\\register.component.ts","E:\\Proiecte\\CookBook\\FrontEnd\\cookbook\\src\\app\\core\\register\\register.component.html"],"names":[],"mappings":"AAGA,SAAsB,SAAtB,QAAuC,gBAAvC;AAGA,SAAqB,OAArB,QAAoC,MAApC;AAEA,SAAS,GAAT,EAAc,SAAd,QAA+B,gBAA/B;;;;;;;;;;;;;;;;ACsB8C,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,aAAA;;;;;;AAQ1B,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA;AAAgF,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,4DAAA;AAA0D,IAAA,EAAA,CAAA,YAAA;;;;;;AAC1I,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA;AAA4E,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mCAAA;AAAiC,IAAA,EAAA,CAAA,YAAA;;;;ADrBjI,OAAM,MAAO,iBAAP,CAAwB;AAK5B,EAAA,WAAA,CACa,kBADb,EAEY,YAFZ,EAGY,QAHZ,EAIY,MAJZ,EAIyB;AAHZ,SAAA,kBAAA,GAAA,kBAAA;AACD,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,MAAA,GAAA,MAAA;AAYZ,SAAA,IAAA,GAAO,IAAI,SAAJ,CAAc,EAAd,CAAP;AACA,SAAA,YAAA,GAAe,IAAI,SAAJ,CAAc,EAAd,CAAf;AACA,SAAA,KAAA,GAAO,EAAP;AACA,SAAA,SAAA,GAAW,EAAX;AACA,SAAA,QAAA,GAA2B,IAAI,OAAJ,EAA3B;AACA,SAAA,eAAA,GAAuB,+BAAvB;AAEA,SAAA,MAAA,GAA8B,CAC5B;AACE,MAAA,GAAG,EAAE,UADP;AAEE,MAAA,IAAI,EAAE,OAFR;AAGE,MAAA,eAAe,EAAE;AACf,QAAA,KAAK,EAAE,iBADQ;AAEf,QAAA,WAAW,EAAE,iCAFE;AAGf,QAAA,QAAQ,EAAE,IAHK;AAIf,QAAA,SAAS,EAAC;AAJK;AAHnB,KAD4B,EAW5B;AACE,MAAA,GAAG,EAAE,OADP;AAEE,MAAA,IAAI,EAAE,OAFR;AAGE,MAAA,eAAe,EAAE;AACf,QAAA,KAAK,EAAE,iBADQ;AAEf,QAAA,WAAW,EAAE,+BAFE;AAGf,QAAA,OAAO,EAAE,2CAHM;AAIf,QAAA,QAAQ,EAAE,IAJK;AAKf,QAAA,SAAS,EAAC;AALK,OAHnB;AAUE,MAAA,UAAU,EAAE;AACV,QAAA,QAAQ,EAAE;AACR,UAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,KAAqC;AADtC;AADA;AAVd,KAX4B,CAA9B;AA4BA,SAAA,cAAA,GAAoC,CAAC;AACnC,MAAA,UAAU,EAAE;AACV,QAAA,UAAU,EAAE,CACV;AAAE,UAAA,IAAI,EAAE,YAAR;AAAsB,UAAA,OAAO,EAAE;AAAE,YAAA,SAAS,EAAE;AAAb;AAA/B,SADU;AADF,OADuB;AAMnC,MAAA,UAAU,EAAC,CACT;AACE,QAAA,GAAG,EAAE,UADP;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,eAAe,EAAE;AACf,UAAA,KAAK,EAAE,2BADQ;AAEf,UAAA,WAAW,EAAE,sBAFE;AAGf,UAAA,IAAI,EAAE,UAHS;AAIf,UAAA,QAAQ,EAAE,IAJK;AAKf,UAAA,SAAS,EAAE;AALI;AAHnB,OADS,EAYT;AACE,QAAA,GAAG,EAAE,cADP;AAEE,QAAA,IAAI,EAAE,OAFR;AAGE,QAAA,eAAe,EAAE;AACf,UAAA,KAAK,EAAE,sBADQ;AAEf,UAAA,WAAW,EAAE,sBAFE;AAGf,UAAA,IAAI,EAAE,UAHS;AAIf,UAAA,QAAQ,EAAE,IAJK;AAKf,UAAA,SAAS,EAAE;AALI;AAHnB,OAZS;AANwB,KAAD,CAApC;AA7CE,SAAK,WAAL,GAAiB,YAAjB;AAEA,SAAK,kBAAL,GAA0B,kBAAkB,CAAC,OAAnB,CAA2B,oBAA3B,EACvB,IADuB,CAClB,GAAG,CAAC,CAAC;AAAC,MAAA;AAAD,KAAD,KAAe,OAAO,GAAG,YAAH,GAAkB,UAAzC,CADe,CAA1B;AAED;;AAED,EAAA,QAAQ,GAAA,CAEP;;AAqED,EAAA,WAAW,GAAA;AACT,SAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACA,SAAK,QAAL,CAAc,WAAd;AACD;;AAED,EAAA,QAAQ,GAAA;AACN,SAAK,KAAL,CAAW,QAAX,GAAoB,CAApB;AACA,SAAK,KAAL,CAAW,QAAX,GAAoB,KAAK,SAAL,CAAe,QAAnC;AACA,SAAK,WAAL,CAAiB,QAAjB,CAA0B,KAAK,KAA/B,EAAsC,IAAtC,CAA2C,SAAS,CAAC,KAAK,QAAN,CAApD,EAAqE,SAArE,CAA+E,GAAG,IAAE;AAClF,WAAK,QAAL,CAAc,4BAAd,CAA2C,GAAG,CAAC,QAA/C;;AACA,UAAK,GAAG,CAAC,QAAJ,KAAe,KAAK,eAAzB,EAA0C;AACxC,QAAA,UAAU,CAAC,MAAK;AACd,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KAPD;AAQD;;AAxG2B;;;mBAAjB,iB,EAAiB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,kBAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,WAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;QAAjB,iB;AAAiB,EAAA,SAAA,EAAA,CAAA,CAAA,cAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,E;AAAA,EAAA,IAAA,EAAA,E;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,OAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,CAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,EAAA,oBAAA,EAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,oBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,cAAA,EAAA,EAAA,CAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,qBAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,0BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;AClB9B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA;AAAU,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,YAAA;AAAU,MAAA,EAAA,CAAA,YAAA;AACpB,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,gBAAA;AAAgB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,cAAA;AAAY,MAAA,EAAA,CAAA,YAAA;AAC5B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,mBAAA;AAAmB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mDAAA;AAAiD,MAAA,EAAA,CAAA,YAAA;AACpE,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,kBAAA;AAEI,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,aAAA,EAAA,CAAA;;AAEI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,aAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAkC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAC1C,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA;AACI,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,aAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAsC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAC1C,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAkC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAC1C,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,UAAA;AACI,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gCAAA;AAA8B,MAAA,EAAA,CAAA,YAAA;AAClC,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAyD,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,mDAAA,GAAA;AAAA,eAAS,GAAA,CAAA,QAAA,EAAT;AAAmB,OAAnB;AACrD,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,gBAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,IAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,OAAA,EAAA,EAAA;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA;AACI,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAsC,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,MAAA,EAAA,CAAA,YAAA;AAC9C,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEJ,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AACJ,MAAA,EAAA,CAAA,YAAA;AAEJ,MAAA,EAAA,CAAA,YAAA;;;;AAzCyC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,kBAAA,CAAA;AAEf,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,IAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,IAAA;AACW,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,EAAa,QAAb,EAAa,GAAA,CAAA,MAAb,EAAa,OAAb,EAAa,GAAA,CAAA,KAAb;AAOX,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,CAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,YAAA;AACW,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,YAAA,EAAqB,QAArB,EAAqB,GAAA,CAAA,cAArB,EAAqB,OAArB,EAAqB,GAAA,CAAA,SAArB;AAa6D,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA,IAAA,GAAA,CAAA,YAAA,CAAA,OAAA;AAI1C,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,OAAA,IAAA,GAAA,CAAA,YAAA,CAAA,OAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,IAAA,CAAA,KAAA,IAAA,GAAA,CAAA,YAAA,CAAA,KAAA","sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { UserModel, UserPasword } from 'src/app/models/user-model';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { StepperOrientation } from '@angular/material/stepper';\nimport { Observable, Subject } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { SnackbarComponent } from 'src/app/shared/snackbar/snackbar.component';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  stepperOrientation: Observable<StepperOrientation>;\n  public userService:UserService;\n\n  constructor(\n      private  breakpointObserver: BreakpointObserver, \n      private _userService: UserService,\n      private snackBar: SnackbarComponent,\n      private router:Router\n      ) {\n    this.userService=_userService;\n\n    this.stepperOrientation = breakpointObserver.observe('(min-width: 800px)')\n      .pipe(map(({matches}) => matches ? 'horizontal' : 'vertical'));\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  form = new FormGroup({});\n  passwordForm = new FormGroup({});\n  model ={} as UserModel;\n  pwdObject ={} as UserPasword;\n  destroy$: Subject<boolean>=new Subject<boolean>();\n  invalidUsername:string=\"This username already exists!\";\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'userName',\n      type: 'input',\n      templateOptions: {\n        label: 'Nume utilizator',\n        placeholder: 'Introduceti numele utilizator: ',\n        required: true,\n        maxLength:50\n      }\n    },\n    {\n      key: 'email',\n      type: 'input',\n      templateOptions: {\n        label: 'Adresa de email',\n        placeholder: 'Introduceti adresa de email: ',\n        pattern: \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\",\n        required: true,\n        maxLength:50\n      },\n      validation: {\n        messages: {\n          pattern: (error, field: FormlyFieldConfig) => `Adresa de email invalida`,\n        },\n    },\n  }];\n\n  passwordFields: FormlyFieldConfig[]=[{\n    validators: {\n      validation: [\n        { name: 'fieldMatch', options: { errorPath: 'passwordChck' } },\n      ],\n    },\n    fieldGroup:[\n      {\n        key: 'password',\n        type: 'input',\n        templateOptions: {\n          label: 'Va rugam alegeti o parola',\n          placeholder: 'Introduceti parola: ',\n          type: 'password',\n          required: true,\n          minLength: 6,\n        }\n      },\n      {\n        key: 'passwordChck',\n        type: 'input',\n        templateOptions: {\n          label: 'Reintroduceti parola',\n          placeholder: 'Introduceti parola: ',\n          type: 'password',\n          required: true,\n          minLength: 6,\n        }, \n      },\n    ],\n  }];\n\n  ngOnDestroy(){\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n\n  onSubmit() {\n    this.model.userRole=2;\n    this.model.password=this.pwdObject.password;\n    this.userService.userPost(this.model).pipe(takeUntil(this.destroy$)).subscribe(res=>{\n      this.snackBar.openUserRegistrationSnackBar(res.userName);\n      if ((res.userName!==this.invalidUsername)){\n        setTimeout(() => {\n          this.router.navigate(['/login']);\n        }, 5000); \n      }\n    });\n  }\n}\n\n\n\n","<div class=\"register-container\">\n\n    <mat-card>\n        <mat-icon>restaurant</mat-icon>\n        <mat-card-title>Inregistrare</mat-card-title>\n        <mat-card-subtitle>Va rugam sa completati formularul de inregistrare</mat-card-subtitle>\n        <mat-card-content>\n\n            <mat-stepper class=\"stepper\" [orientation]=\"(stepperOrientation | async)!\">\n\n                <mat-step [stepControl]=\"form\" label=\"Introduceti numele si email-ul\">\n                    <form [formGroup]=\"form\">\n                        <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n                        <div>\n                            <button mat-button matStepperNext>Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n\n                <mat-step [stepControl]=\"passwordForm\" label=\"Introduceti parola\">\n                    <form [formGroup]=\"passwordForm\">\n                        <formly-form [form]=\"passwordForm\" [fields]=\"passwordFields\" [model]=\"pwdObject\"></formly-form>\n                        <div>\n                            <button mat-button matStepperPrevious>Back</button>\n                            <button mat-button matStepperNext>Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n\n                <mat-step>\n                    <ng-template matStepLabel>Ultimul pas</ng-template>\n                    <br>\n                    <h1>Echipa cookbook va multumeste!</h1>\n                    <br>\n                    <button class=\"register-button\" mat-button type=\"submit\" (click)=\"onSubmit()\" [disabled]=\"form.invalid || passwordForm.invalid\">\n                        Inregistrare\n                    </button>\n                    <br>\n                    <label class=\"error-message-label\" *ngIf=\"form.invalid || passwordForm.invalid\">*Datele nu sunt completate corect. Va rugam sa verificati.</label>\n                    <label class=\"valid-message-label\" *ngIf=\"form.valid && passwordForm.valid\">*Apasati aici pentru inregistrare</label>\n                    <div>\n                        <button mat-button matStepperPrevious>Back</button>\n                    </div>\n                </mat-step>\n\n            </mat-stepper>\n        </mat-card-content>\n    </mat-card>\n      \n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}