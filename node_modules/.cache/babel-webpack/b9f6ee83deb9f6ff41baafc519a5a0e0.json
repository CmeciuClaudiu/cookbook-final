{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/recipes.service\";\nimport * as i2 from \"src/app/shared/snackbar/snackbar.component\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/stepper\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ngx-formly/core\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/list\";\nimport * as i12 from \"@angular/material/autocomplete\";\nimport * as i13 from \"@angular/material/icon\";\nimport * as i14 from \"@angular/material/divider\";\nimport * as i15 from \"@angular/material/core\";\n\nfunction AddRecipesComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Pasul 1\");\n  }\n}\n\nfunction AddRecipesComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 7);\n    i0.ɵɵelement(1, \"formly-form\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵtext(3, \"Inainte\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.recipeForm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"model\", ctx_r1.recipeModel)(\"fields\", ctx_r1.recipeFormFields)(\"options\", ctx_r1.options)(\"form\", ctx_r1.recipeForm);\n  }\n}\n\nfunction AddRecipesComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Pasul 2\");\n  }\n}\n\nfunction AddRecipesComponent_ng_template_11_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Acest camp nu poate fi gol \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRecipesComponent_ng_template_11_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Acest camp nu poate fi gol \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRecipesComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelement(0, \"br\");\n    i0.ɵɵelementStart(1, \"mat-form-field\", 10);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Descriere preparat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"textarea\", 11);\n    i0.ɵɵtemplate(5, AddRecipesComponent_ng_template_11_mat_error_5_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-form-field\", 13);\n    i0.ɵɵelementStart(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Instructiuni\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"textarea\", 11);\n    i0.ɵɵtemplate(10, AddRecipesComponent_ng_template_11_mat_error_10_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\");\n    i0.ɵɵelementStart(12, \"button\", 14);\n    i0.ɵɵtext(13, \"Inapoi\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AddRecipesComponent_ng_template_11_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.getFormsData();\n    });\n    i0.ɵɵtext(15, \"Inainte\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r3.descriptionFormControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.descriptionFormControl.hasError(\"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r3.instructionsFormControl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.instructionsFormControl.hasError(\"required\"));\n  }\n}\n\nfunction AddRecipesComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"Pasul 3\");\n  }\n}\n\nfunction AddRecipesComponent_ng_template_14_mat_list_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"mat-divider\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r14.name, \": (\", item_r14.quantity, \") \");\n  }\n}\n\nfunction AddRecipesComponent_ng_template_14_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r15.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r15.name, \" \");\n  }\n}\n\nfunction AddRecipesComponent_ng_template_14_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Ati introdus prea multe caractere \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddRecipesComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"h1\", 1);\n    i0.ɵɵtext(1, \"Lista ingrediente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"mat-list\");\n    i0.ɵɵtemplate(3, AddRecipesComponent_ng_template_14_mat_list_item_3_Template, 3, 2, \"mat-list-item\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"mat-form-field\", 17);\n    i0.ɵɵelementStart(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Alegeti ingredientul\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 18);\n    i0.ɵɵelementStart(9, \"mat-icon\", 19);\n    i0.ɵɵtext(10, \" search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"mat-autocomplete\", null, 20);\n    i0.ɵɵtemplate(13, AddRecipesComponent_ng_template_14_mat_option_13_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵpipe(14, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-form-field\", 17);\n    i0.ɵɵelementStart(16, \"mat-label\");\n    i0.ɵɵtext(17, \"Cantitatea necesara\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"input\", 22);\n    i0.ɵɵelementStart(19, \"mat-icon\", 19);\n    i0.ɵɵtext(20, \" border_color\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, AddRecipesComponent_ng_template_14_mat_error_21_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AddRecipesComponent_ng_template_14_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.addIngredient();\n    });\n    i0.ɵɵelementStart(23, \"mat-icon\");\n    i0.ɵɵtext(24, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(25, \"br\");\n    i0.ɵɵelementStart(26, \"button\", 14);\n    i0.ɵɵtext(27, \"Back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 9);\n    i0.ɵɵtext(29, \"Pasul final\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r11 = i0.ɵɵreference(12);\n\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.quantitiesObjList);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.ingredientsFormControl)(\"matAutocomplete\", _r11);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 6, ctx_r5.filteredOptions));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r5.quantitiesFormControl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.quantitiesFormControl.hasError(\"maxlength\"));\n  }\n}\n\nexport class AddRecipesComponent {\n  constructor(recipesService, snackBar) {\n    this.recipesService = recipesService;\n    this.snackBar = snackBar;\n    this.recipeForm = new FormGroup({});\n    this.options = {};\n    this.recipeFormFields = [];\n    this.recipeModel = {};\n    this.quantitiesObjList = [];\n    this.search = \"\";\n    this.descriptionFormControl = new FormControl('', [Validators.required]);\n    this.instructionsFormControl = new FormControl('', [Validators.required]);\n    this.ingredientsFormControl = new FormControl();\n    this.quantitiesFormControl = new FormControl('', [Validators.maxLength(10)]);\n  }\n\n  ngOnInit() {\n    this.getAllIngredients();\n    this.recipeFormFields = [{\n      key: 'dishName',\n      type: 'input',\n      className: 'dish-style',\n      templateOptions: {\n        label: 'Nume preparat',\n        placeholder: 'Ex. Limonada',\n        required: true,\n        maxLength: 50\n      }\n    }, {\n      key: 'dishType',\n      type: 'select',\n      className: 'dishType-style',\n      templateOptions: {\n        label: 'Tip preparat',\n        placeholder: 'Alegeti tipul preparatului',\n        required: true,\n        options: [{\n          value: 1,\n          label: 'Aperitive'\n        }, {\n          value: 2,\n          label: 'Felul intai'\n        }, {\n          value: 3,\n          label: 'Felul principal'\n        }, {\n          value: 4,\n          label: 'Desert'\n        }, {\n          value: 5,\n          label: 'Smoothie & Drinks'\n        }]\n      }\n    }, {\n      key: 'preparationTime',\n      type: 'input',\n      templateOptions: {\n        label: 'Timp de gatire (minute)',\n        type: 'input',\n        required: true,\n        pattern: '([1-9]|[1-9][0-9]|[1-4][0-9][0-9])'\n      },\n      validation: {\n        messages: {\n          pattern: (error, field) => `Eroare! (introduceti doar valori intre 1-500)`\n        }\n      }\n    }, {\n      key: 'image',\n      type: 'input',\n      templateOptions: {\n        label: 'Poza de prezentare',\n        placeholder: 'Introduceti Url pentru poza de prezentare',\n        required: true,\n        maxLength: 50\n      }\n    }];\n    this.filteredOptions = this.ingredientsFormControl.valueChanges.pipe(startWith(''), map(value => this.filterIngredientsList(value)));\n  }\n\n  getFormsData() {\n    this.recipeModel.instructions = this.instructionsFormControl.value;\n    this.recipeModel.description = this.descriptionFormControl.value;\n  }\n\n  getAllIngredients() {\n    this.recipesService.getIngredients().subscribe(response => {\n      this.ingredientsList = response;\n    });\n  }\n\n  addIngredient() {\n    let ingredientObj = {\n      name: this.ingredientsFormControl.value,\n      quantity: this.quantitiesFormControl.value\n    };\n\n    if (ingredientObj.name === \"\" || ingredientObj.quantity === \"\") {\n      this.snackBar.openSimpleMessageSnackbar('Operatiune esuata! Datele nu sunt completate');\n      return;\n    }\n\n    if (this.quantitiesObjList.some(item => item.name === ingredientObj.name)) {\n      this.snackBar.openSimpleMessageSnackbar('Acest ingredient a fost deja adaugat');\n      return;\n    }\n\n    if (this.ingredientsList.some(item => item.name === ingredientObj.name)) {\n      this.quantitiesObjList.push(ingredientObj);\n    } else {\n      this.snackBar.openSimpleMessageSnackbar('Ingredientul introdus nu exista in baza de date');\n      return;\n    }\n\n    this.recipeModel.quantities = this.quantitiesObjList;\n  }\n\n  filterIngredientsList(value) {\n    const filterValue = value.toLowerCase();\n    return this.ingredientsList.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n}\n\nAddRecipesComponent.ɵfac = function AddRecipesComponent_Factory(t) {\n  return new (t || AddRecipesComponent)(i0.ɵɵdirectiveInject(i1.RecipesService), i0.ɵɵdirectiveInject(i2.SnackbarComponent));\n};\n\nAddRecipesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddRecipesComponent,\n  selectors: [[\"app-add-recipes\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"add-recipe-container\"], [1, \"add-recipe-title\"], [1, \"form-container\"], [\"orientation\", \"vertical\", 3, \"linear\"], [3, \"completed\"], [\"matStepLabel\", \"\"], [\"matStepContent\", \"\"], [3, \"formGroup\"], [1, \"form\", 3, \"model\", \"fields\", \"options\", \"form\"], [\"mat-button\", \"\", \"matStepperNext\", \"\"], [\"appearance\", \"fill\", 1, \"prep-description-style\"], [\"matInput\", \"\", \"rows\", \"8\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"appearance\", \"fill\", 1, \"prep-instructions-style\"], [\"mat-button\", \"\", \"matStepperPrevious\", \"\"], [\"mat-button\", \"\", \"matStepperNext\", \"\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 1, \"ingredients-formField-styles\"], [\"matInput\", \"\", \"placeholder\", \"Cautati ingredientul\", 3, \"formControl\", \"matAutocomplete\"], [\"matSuffix\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Placeholder\", 3, \"formControl\"], [\"mat-icon-button\", \"\", 3, \"click\"], [3, \"value\"]],\n  template: function AddRecipesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Adaugati o reteta noua\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelementStart(4, \"mat-card\");\n      i0.ɵɵelementStart(5, \"mat-stepper\", 3);\n      i0.ɵɵelementStart(6, \"mat-step\", 4);\n      i0.ɵɵtemplate(7, AddRecipesComponent_ng_template_7_Template, 1, 0, \"ng-template\", 5);\n      i0.ɵɵtemplate(8, AddRecipesComponent_ng_template_8_Template, 4, 5, \"ng-template\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-step\", 4);\n      i0.ɵɵtemplate(10, AddRecipesComponent_ng_template_10_Template, 1, 0, \"ng-template\", 5);\n      i0.ɵɵtemplate(11, AddRecipesComponent_ng_template_11_Template, 16, 4, \"ng-template\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"mat-step\");\n      i0.ɵɵtemplate(13, AddRecipesComponent_ng_template_13_Template, 1, 0, \"ng-template\", 5);\n      i0.ɵɵtemplate(14, AddRecipesComponent_ng_template_14_Template, 30, 8, \"ng-template\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"linear\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"completed\", ctx.recipeForm.valid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"completed\", ctx.descriptionFormControl.valid && ctx.instructionsFormControl.valid);\n    }\n  },\n  directives: [i3.MatCard, i4.MatStepper, i4.MatStep, i4.MatStepLabel, i4.MatStepContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.FormlyForm, i7.MatButton, i4.MatStepperNext, i8.MatFormField, i8.MatLabel, i9.MatInput, i5.DefaultValueAccessor, i5.RequiredValidator, i5.NgControlStatus, i5.FormControlDirective, i10.NgIf, i4.MatStepperPrevious, i8.MatError, i11.MatList, i10.NgForOf, i12.MatAutocompleteTrigger, i13.MatIcon, i8.MatSuffix, i12.MatAutocomplete, i11.MatListItem, i14.MatDivider, i15.MatOption],\n  pipes: [i10.AsyncPipe],\n  styles: [\".add-recipe-container[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    background-color:rgb(251, 251, 253);\\r\\n    flex-direction: column;\\r\\n    height:100%;\\r\\n}\\r\\n\\r\\n.add-recipe-title[_ngcontent-%COMP%]{\\r\\n    align-self: center;\\r\\n    color:orange;\\r\\n    font-size:20px;\\r\\n}\\r\\n\\r\\n.stepper[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.prep-description-style[_ngcontent-%COMP%]{\\r\\n    width:300px;\\r\\n    margin-left: 10px;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.prep-instructions-style[_ngcontent-%COMP%]{\\r\\n    width:1000px;\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.ingredients-list-item[_ngcontent-%COMP%]{\\r\\n    color:rgb(63,81,181);\\r\\n    margin-right:3px;\\r\\n    margin-left:3px;\\r\\n}\\r\\n\\r\\n.ingredients-formField-styles[_ngcontent-%COMP%]{\\r\\n    margin-left: 3px;\\r\\n}\\r\\n\\r\\n@media (max-width: 1200px) {\\r\\n    .prep-instructions-style[_ngcontent-%COMP%]{\\r\\n        width:300px;\\r\\n        margin-left: 10px;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (max-width: 450px) {\\r\\n    .prep-instructions-style[_ngcontent-%COMP%]{\\r\\n        width:230px;\\r\\n    }\\r\\n\\r\\n    .prep-description-style[_ngcontent-%COMP%]{\\r\\n        width:230px;\\r\\n    }\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1yZWNpcGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osbUNBQW1DO0lBQ25DLHNCQUFzQjtJQUN0QixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVDO0lBQ0c7UUFDSSxXQUFXO1FBQ1gsaUJBQWlCO0lBQ3JCO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLFdBQVc7SUFDZjs7SUFFQTtRQUNJLFdBQVc7SUFDZjtBQUNKIiwiZmlsZSI6ImFkZC1yZWNpcGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLXJlY2lwZS1jb250YWluZXJ7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNTEsIDI1MSwgMjUzKTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoZWlnaHQ6MTAwJTtcclxufVxyXG5cclxuLmFkZC1yZWNpcGUtdGl0bGV7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBjb2xvcjpvcmFuZ2U7XHJcbiAgICBmb250LXNpemU6MjBweDtcclxufVxyXG5cclxuLnN0ZXBwZXJ7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4ucHJlcC1kZXNjcmlwdGlvbi1zdHlsZXtcclxuICAgIHdpZHRoOjMwMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5wcmVwLWluc3RydWN0aW9ucy1zdHlsZXtcclxuICAgIHdpZHRoOjEwMDBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcblxyXG4uaW5ncmVkaWVudHMtbGlzdC1pdGVte1xyXG4gICAgY29sb3I6cmdiKDYzLDgxLDE4MSk7XHJcbiAgICBtYXJnaW4tcmlnaHQ6M3B4O1xyXG4gICAgbWFyZ2luLWxlZnQ6M3B4O1xyXG59XHJcblxyXG4uaW5ncmVkaWVudHMtZm9ybUZpZWxkLXN0eWxlc3tcclxuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XHJcbn1cclxuXHJcbiBAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7XHJcbiAgICAucHJlcC1pbnN0cnVjdGlvbnMtc3R5bGV7XHJcbiAgICAgICAgd2lkdGg6MzAwcHg7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICB9XHJcbn0gXHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNDUwcHgpIHtcclxuICAgIC5wcmVwLWluc3RydWN0aW9ucy1zdHlsZXtcclxuICAgICAgICB3aWR0aDoyMzBweDtcclxuICAgIH1cclxuXHJcbiAgICAucHJlcC1kZXNjcmlwdGlvbi1zdHlsZXtcclxuICAgICAgICB3aWR0aDoyMzBweDtcclxuICAgIH1cclxufSBcclxuIl19 */\"]\n});","map":{"version":3,"sources":["E:\\Proiecte\\CookBook\\FrontEnd\\cookbook\\src\\app\\pages\\home-page\\add-recipes\\add-recipes.component.ts","E:\\Proiecte\\CookBook\\FrontEnd\\cookbook\\src\\app\\pages\\home-page\\add-recipes\\add-recipes.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { IngredientModel, IngredientRecipeModel, RecipeModel } from 'src/app/models/recipe-models';\nimport { RecipesService } from 'src/app/services/recipes.service';\nimport { SnackbarComponent } from 'src/app/shared/snackbar/snackbar.component';\n\n\n\n@Component({\n  selector: 'app-add-recipes',\n  templateUrl: './add-recipes.component.html',\n  styleUrls: ['./add-recipes.component.css']\n})\nexport class AddRecipesComponent implements OnInit {\n\n  constructor(private recipesService : RecipesService,\n              private snackBar:SnackbarComponent) { }\n\n  recipeForm = new FormGroup({});\n  options: FormlyFormOptions = {};\n  recipeFormFields: FormlyFieldConfig[] = [];\n  recipeModel={} as RecipeModel;\n  ingredientsList: any;\n  quantitiesObjList :IngredientRecipeModel[]=[];\n \n  search=\"\";\n  filteredOptions: Observable<IngredientModel[]> | undefined;\n\n\n  descriptionFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  instructionsFormControl = new FormControl('', [\n    Validators.required\n  ]);\n  ingredientsFormControl = new FormControl ();\n  quantitiesFormControl = new FormControl('', [\n    Validators.maxLength(10)\n  ]);\n\n  \n  ngOnInit(): void {\n\n   this.getAllIngredients();\n\n    this.recipeFormFields=[\n    {\n      key: 'dishName',\n      type: 'input',\n      className:'dish-style',\n      templateOptions: {\n        label: 'Nume preparat',\n        placeholder: 'Ex. Limonada',\n        required: true,\n        maxLength: 50\n      },\n    }, \n    {\n      key: 'dishType',\n      type: 'select',\n      className:'dishType-style',\n      templateOptions: {\n        label: 'Tip preparat',\n        placeholder: 'Alegeti tipul preparatului',\n        required: true,\n        options: [\n          { value: 1, label: 'Aperitive' },\n          { value: 2, label: 'Felul intai' },\n          { value: 3, label: 'Felul principal' },\n          { value: 4, label: 'Desert' },\n          { value: 5, label: 'Smoothie & Drinks'}\n        ],\n      },\n    },\n    {\n      key: 'preparationTime',\n      type: 'input',\n      templateOptions: {\n        label: 'Timp de gatire (minute)',\n        type: 'input',\n        required: true,\n        pattern: '([1-9]|[1-9][0-9]|[1-4][0-9][0-9])'\n      },validation: {\n        messages: {\n          pattern: (error, field: FormlyFieldConfig) => `Eroare! (introduceti doar valori intre 1-500)`,\n        },\n      },\n    },\n    {\n      key: 'image',\n      type: 'input',\n      templateOptions: {\n        label: 'Poza de prezentare',\n        placeholder: 'Introduceti Url pentru poza de prezentare',\n        required: true,\n        maxLength: 50\n      },\n    }\n    ];\n\n    this.filteredOptions = this.ingredientsFormControl.valueChanges\n    .pipe(\n      startWith(''),\n      map(value => this.filterIngredientsList(value))\n    );\n  }\n\n  getFormsData(){\n    this.recipeModel.instructions=this.instructionsFormControl.value;\n    this.recipeModel.description=this.descriptionFormControl.value;\n  }\n\n  getAllIngredients(){\n      this.recipesService.getIngredients().subscribe(response=>{\n        this.ingredientsList=response;\n      })\n  }\n\n  addIngredient(){\n    let ingredientObj: IngredientRecipeModel={\n      name: this.ingredientsFormControl.value,\n      quantity: this.quantitiesFormControl.value\n    };\n\n    if(ingredientObj.name===\"\"||ingredientObj.quantity===\"\"){\n      this.snackBar.openSimpleMessageSnackbar('Operatiune esuata! Datele nu sunt completate');\n      return;\n    }\n    if(this.quantitiesObjList.some(item=> item.name===ingredientObj.name)){\n      this.snackBar.openSimpleMessageSnackbar('Acest ingredient a fost deja adaugat');\n      return;\n    }\n    if (this.ingredientsList.some((item: { name: string; })=> item.name===ingredientObj.name)){\n      this.quantitiesObjList.push(ingredientObj);\n    }else{\n      this.snackBar.openSimpleMessageSnackbar('Ingredientul introdus nu exista in baza de date');\n      return;\n    }\n    \n    this.recipeModel.quantities=this.quantitiesObjList;\n  }\n\n  private filterIngredientsList(value: string): IngredientModel[] {\n    const filterValue = value.toLowerCase();\n\n    return this.ingredientsList.filter((option: { name: string; }) => option.name.toLowerCase().includes(filterValue));\n  }\n\n \n}\n\n\n","<div class=\"add-recipe-container\">\n    <h1 class=\"add-recipe-title\">Adaugati o reteta noua</h1>\n    <div class=\"form-container\">\n        <mat-card>\n            <mat-stepper orientation=\"vertical\" [linear]=\"false\">\n                <mat-step [completed]=\"recipeForm.valid\">\n                    <ng-template matStepLabel>Pasul 1</ng-template>\n                    <ng-template matStepContent>\n                        <form [formGroup]=\"recipeForm\">\n                            <formly-form [model]=\"recipeModel\" [fields]=\"recipeFormFields\" [options]=\"options\"\n                                [form]=\"recipeForm\" class=\"form\">\n                            </formly-form>\n                        </form>\n                        <button mat-button matStepperNext>Inainte</button>\n                    </ng-template>\n                </mat-step>\n\n                <mat-step [completed]=\"descriptionFormControl.valid && instructionsFormControl.valid\">\n                    <ng-template matStepLabel>Pasul 2</ng-template>\n                    <ng-template matStepContent>\n                        <br>\n                        <mat-form-field appearance=\"fill\" class=\"prep-description-style\" >\n                            <mat-label>Descriere preparat</mat-label>\n                            <textarea matInput rows=\"8\" required [formControl]=\"descriptionFormControl\"></textarea>\n                            <mat-error *ngIf=\"descriptionFormControl.hasError('required')\">\n                                Acest camp nu poate fi gol\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"fill\" class=\"prep-instructions-style\">\n                            <mat-label>Instructiuni</mat-label>\n                            <textarea matInput rows=\"8\" required [formControl]=\"instructionsFormControl\"></textarea>\n                            <mat-error *ngIf=\"instructionsFormControl.hasError('required')\">\n                                Acest camp nu poate fi gol\n                            </mat-error>\n                        </mat-form-field>\n                        <br>\n                        <button mat-button matStepperPrevious>Inapoi</button>\n                        <button mat-button matStepperNext (click)=\"getFormsData()\">Inainte</button>\n                    </ng-template>\n\n                </mat-step>\n\n                <mat-step>\n                    <ng-template matStepLabel>Pasul 3</ng-template>\n                    <ng-template matStepContent>\n                        <h1 class=\"add-recipe-title\">Lista ingrediente</h1>\n                        <mat-list>\n                            <mat-list-item *ngFor=\"let item of quantitiesObjList\">\n                                \n                                    {{item.name}}: ({{item.quantity}})\n                                \n                                <mat-divider></mat-divider>\n                            </mat-list-item>\n                            \n                        </mat-list>\n                          <br>\n                        <mat-form-field appearance=\"outline\" class=\"ingredients-formField-styles\">\n                            <mat-label>Alegeti ingredientul</mat-label>\n                            <input matInput placeholder=\"Cautati ingredientul\" [formControl]=\"ingredientsFormControl\" [matAutocomplete]=\"auto\">\n                            <mat-icon matSuffix> search</mat-icon>\n                            <mat-autocomplete #auto=\"matAutocomplete\">\n                                <mat-option *ngFor=\"let option of filteredOptions  | async\" [value]=\"option.name\">\n                                  {{option.name}}\n                                </mat-option>\n                              </mat-autocomplete>\n                        </mat-form-field>\n\n                        <mat-form-field appearance=\"outline\" class=\"ingredients-formField-styles\">\n                            <mat-label>Cantitatea necesara</mat-label>\n                            <input matInput placeholder=\"Placeholder\" [formControl]=\"quantitiesFormControl\">\n                            <mat-icon matSuffix> border_color</mat-icon>\n                            <mat-error *ngIf=\"quantitiesFormControl.hasError('maxlength')\">\n                                Ati introdus prea multe caractere\n                            </mat-error>\n                        </mat-form-field>\n                        <button mat-icon-button (click)=\"addIngredient()\">\n                            <mat-icon>add</mat-icon>\n                          </button>\n                          <br>\n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-button matStepperNext>Pasul final</button>\n                    </ng-template>\n                    \n                </mat-step>\n                </mat-stepper>\n\n        </mat-card>\n\n    </div>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}