{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlyMaterialModule } from '@ngx-formly/material';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { SharedModule } from '../shared/shared.module';\nimport { SnackbarComponent } from '../shared/snackbar/snackbar.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-formly/core\";\nexport function fieldMatchValidator(control) {\n  const {\n    password,\n    passwordChck\n  } = control.value;\n\n  if (!passwordChck || !password) {\n    return null;\n  }\n\n  if (passwordChck === password) {\n    return null;\n  }\n\n  return {\n    fieldMatch: {\n      message: 'Parolele nu sunt identice'\n    }\n  };\n}\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule {}\n\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)();\n  };\n\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [SnackbarComponent],\n    imports: [[CommonModule, AppRoutingModule, MatToolbarModule, MatIconModule, MatButtonModule, MatSidenavModule, FlexLayoutModule, MatMenuModule, MatCardModule, MatInputModule, FormsModule, ReactiveFormsModule, FormlyModule.forRoot({\n      validators: [{\n        name: 'fieldMatch',\n        validation: fieldMatchValidator\n      }],\n      validationMessages: [{\n        name: 'required',\n        message: 'Acest camp nu poate fi gol'\n      }, {\n        name: 'minlength',\n        message: 'Parola trebuie sa contina minim 6 caractere'\n      }, {\n        name: 'maxlength',\n        message: 'Acest camp nu poate sa depaseasca 50 de caractere'\n      }]\n    }), FormlyMaterialModule, MatStepperModule, SharedModule, MatTooltipModule], CommonModule]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module"}